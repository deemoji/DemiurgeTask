//
//  DemiurgeCell.swift
//  DemiurgeTask
//
//  Created by –î–º–∏—Ç—Ä–∏–π –ú–∞—Ä—Ç—å—è–Ω–æ–≤ on 12.08.2024.
//

import Foundation
import UIKit

enum DemiurgeCellType {
    case dead
    
    case alive
    
    case life
}

struct DemiurgeCell: Hashable {
    
    let uuid = UUID()
    
    let name: String
    
    let description: String
    
    let emoji: String
    
    let type: DemiurgeCellType
    
    let color: UIColor?
    
    let secondaryColor: UIColor?
}

extension DemiurgeCell {
    static func instatiateFor(type: DemiurgeCellType) -> DemiurgeCell {
        switch type {
        case .alive:
            return DemiurgeCell(name: "–ñ–∏–≤–∞—è", description: "–∏ —à–µ–≤–µ–ª–∏—Ç—Å—è!", emoji: "üí•", type: type, color: .init(named: "AliveCellColor"), secondaryColor: .init(named: "AliveCellSecondaryColor"))
        case .dead:
            return DemiurgeCell(name: "–ú–µ—Ä—Ç–≤–∞—è", description: "–∏–ª–∏ –ø—Ä–∏–∫–∏–¥—ã–≤–∞–µ—Ç—Å—è", emoji: "üíÄ", type: type, color: .init(named: "DeadCellColor"), secondaryColor: .init(named: "DeadCellSecondaryColor"))
        case .life:
            return DemiurgeCell(name: "–ñ–∏–∑–Ω—å", description: "–ö—É-–∫—É!", emoji: "üê£", type: type, color: .init(named: "LifeCellColor"), secondaryColor: .init(named: "LifeCellSecondaryColor"))
        }
    }
}
